{"version":3,"sources":["Card.js","ItemList.js","SelectList.js","search.js","Scroll.js","People.js","index.js"],"names":["Card","_ref","name","react_default","a","createElement","className","ItemList","Items","map","user","i","src_Card","key","SelectList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","arr","loading","fetch","response","json","data","setState","keys","id","onChange","props","selectChange","selected","disabled","hidden","item","value","React","Component","SearchBox","searchfield","searchChange","type","placeholder","src_SelectList","Scroll","style","overflowY","height","children","People","onSearchChange","event","searchField","target","list","results","push","console","log","selectedValue","url","title","filter","_this2","toLowerCase","includes","search","selectChangeHandler","bind","src_Scroll","src_ItemList","ReactDOM","render","src_People","document","getElementById"],"mappings":"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","file":"static/js/main.78dc0c9b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card  = ({name})=>{\n        return(\n            <div className=\"bg-light-gray dib br3 pa3 ma2 grow\">\n                <div>\n                    <h2>{name}</h2>\n                    {/* <p>Birth Year : {birth_year}</p> */}\n                </div>\n            </div>\n        );\n    }\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst ItemList = ({Items})=>{\n    return(\n        <div>\n            {\n                Items.map((user, i)=>{\n                    return <Card \n                        name={Items[i].name} \n                        key={i}\n                        />\n                })\n            }\n        </div>\n    );\n}\n\nexport default ItemList;","import React from 'react';\nimport './SearchList.css'\n\nclass SelectList extends React.Component{\n    constructor(){\n      super()\n      this.state = {\n        arr:[],\n        loading:true\n      }\n    }\n    async componentDidMount(){\n            const url = 'https://swapi.co/api/';\n            const response = await fetch(url);\n            const data = await response.json();\n            this.setState({arr:Object.keys(data),loading:false});\n    }\n    render(){\n        return (\n        <div>\n            { this.state.loading || !this.state.arr ? (\n                <div className=\"loader\">\n                    <div className=\"spinner\"></div>\n                </div>\n              ) : (\n                <select name=\"slct\" id=\"slct\" onChange={this.props.selectChange}>\n                    <option selected={true} disabled hidden>Choose an option</option>\n                    {this.state.arr.map(function(item) { \n                        return <option value={item} key={item}>{item}</option>\n                })}\n              </select>\n              )}\n        </div>\n        )\n    }\n}\n\nexport default SelectList;","import React from 'react';\nimport './Hello.css';\nimport SelectList from './SelectList'\n\nconst SearchBox = ({ searchfield, searchChange, selectChange }) => {\n    return (\n        <div className='mw5 mw7-ns center bg-light-gray pa3 ph5-ns'>\n            <input \n                className='grow tc input-reset ba b--black-20 pa2 mb2 db w-100'\n                type='search'\n                placeholder='Search'\n                id=\"searchFeild\"\n                onChange={searchChange}/>\n            <div className=\"center-on-page\">\n                <div className=\"select\">\n                    <SelectList selectChange={selectChange} />\n                </div>\n            </div><br/>\n            <small id=\"name-desc\" className=\"f6 black-60 db mb2\">Search Planets, Spaceships, Vehicles, People, Films and Species from Star Wars</small>\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY : 'scroll' , height : '50em'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React from 'react';\nimport ItemList from './ItemList';\nimport SrarchBox from './search';\nimport Scroll from './Scroll';\nimport './App.css';\n\n//  const arr = [\"fgdffgdg\"]\nclass People extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      arr:[],\n      searchField:'',\n      loading:true\n    }\n  }\n  onSearchChange=(event)=>{\n    this.setState({searchField: event.target.value});\n  }\n  \n  async componentDidMount(){\n    const list = [];\n    const url = 'https://swapi.co/api/people/';\n    const response = await fetch(url);\n    const data = await response.json();\n    data.results.map(item=>list.push({name : item.name}));\n    console.log(list)\n    console.log(data.results)\n    this.setState({arr:list,loading:false});\n  }\n\n  async selectChangeHandler(item){\n    const list = [];\n    const selectedValue = item.target.value;\n    const url = 'https://swapi.co/api/'+selectedValue;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data.results);\n\n    if (selectedValue==='films') {\n        data.results.map(item=>{\n        console.log(item.title);\n        return list.push({name : item.title})});\n        this.filter = data;\n        this.setState({arr : list});\n    }else{\n        data.results.map(item=>{\n        console.log(item.name);\n        return list.push({name : item.name})});\n        this.filter = data;\n        this.setState({arr : list});\n    }\n  }\n          \n          render(){\n            const filter = this.state.arr.filter(item=>{\n              return item.name.toLowerCase()\n              .includes(this.state\n                .searchField\n                .toLowerCase())\n              })\n              \n    return(\n      <div>\n        <SrarchBox searchChange={this.onSearchChange} selectChange={this.selectChangeHandler.bind(this)} />,\n        {this.state.loading || !this.state.arr ? (\n          <div className=\"spinner\"></div>\n        ) : (\n          <Scroll>\n            <ItemList Items={filter}/>\n          </Scroll>\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default People;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport People from './People';\n\n// import Search from './search';\n// import ItemList from './ItemList';\n//import * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<ItemList Items={[\"Saab\", \"Volvo\", \"BMW\"]}/>\n//                 , document.getElementById('root'));\n// ReactDOM.render(<Search/>\n//                 , document.getElementById('root'));\n\nReactDOM.render(<People/>\n                , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}